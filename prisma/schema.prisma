// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [citext]
}

enum Role {
  admin
  personal
}

enum EstadoCivil {
  s
  c
  d
  v
}

enum GrupoSanguineo {
  a_positivo
  a_negativo
  b_positivo
  b_negativo
  ab_positivo
  ab_negativo
  o_positivo
  o_negativo
}

enum Sexo {
  m
  f
}

enum TipoContrato {
  dl
  cas
  pi
  p
}

enum TipoDesplazamiento {
  ri
  rv
  r
  d
  p
}

enum TipoDescanso {
  m
  p
  pn
}

enum TipoPermisoLicenciaVacacion {
  p
  v
  pf
}

enum SituacionLaboral {
  nd276
  cpv
  cl30057
  casi
  cast
  cpi
  ppp1404
  pp1004
}

enum RegimenPensionario {
  l29903
  dl19990
}

enum GradoInstruccion {
  sin
  pc
  pi
  sc
  si
  tec
  uni
  pos
  null
}

enum NivelEducativo {
  p
  s
  t
  u
  m
  d
  e
}

model Ubigeo {
  id           Int    @id @default(autoincrement())
  inei         String @unique
  reniec       String @unique
  departamento String @db.Citext
  provincia    String @db.Citext
  distrito     String @db.Citext

  personal Personal[]
  conyuge  Conyuge[]
  children Children[]

  @@map("ubigeos")
}

model Dependencia {
  id        Int     @id @default(autoincrement())
  nombre    String  @unique @db.Citext
  direccion String? @db.Citext
  codigo    String  @unique @db.Citext

  personal Personal[]

  @@map("dependencias")
}

model Cargo {
  id     Int    @id @default(autoincrement())
  nombre String @unique @db.Citext

  personal Personal[]

  @@map("cargos")
}

model File {
  id             String @id @default(cuid())
  name           String
  path           String
  size           Int
  extension      String
  uploaded_by_id String
  folder         String

  uploaded_by        User                 @relation(name: "file_uploaded_by", fields: [uploaded_by_id], references: [id], onDelete: Cascade)
  accessible_by      FileAccess[]
  FormacionAcademica FormacionAcademica[]

  @@map("files")
}

model FileAccess {
  id      String @id @default(cuid())
  file    File   @relation(fields: [file_id], references: [id], onDelete: Cascade)
  file_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String

  @@unique([file_id, user_id])
  @@map("file_access")
}

model User {
  id              String @id @default(cuid())
  name            String @db.Citext
  last_name       String @db.Citext
  email           String @unique @db.Citext
  password        String
  must_change_pwd Int    @default(1)
  dni             String @unique
  role            Role   @default(personal)

  uploaded_files      File[]               @relation(name: "file_uploaded_by")
  accessible_files    FileAccess[]
  personal            Personal?
  formacion_academica FormacionAcademica[]

  @@map("users")
}

model Personal {
  id                  String             @id @default(cuid())
  sexo                Sexo
  grupo_sanguineo     GrupoSanguineo
  n_autogenerado      String
  licencia_conducir   String?            @db.Citext
  fecha_ingreso       DateTime
  anios_servicio      Int
  fecha_nacimiento    DateTime
  domicilio           String             @db.Citext
  numero_contacto     String
  unidad_estructurada String             @db.Citext
  regimen_pensionario RegimenPensionario
  situacion_laboral   SituacionLaboral
  estado_civil        EstadoCivil
  discapacidad        Boolean            @default(false)

  cargo_id       Int
  dependencia_id Int
  ubigeo_id      Int
  user_id        String  @unique
  conyuge_id     String?

  user        User        @relation(fields: [user_id], references: [id], onDelete: Cascade)
  cargo       Cargo       @relation(fields: [cargo_id], references: [id], onDelete: Restrict)
  dependencia Dependencia @relation(fields: [dependencia_id], references: [id], onDelete: Restrict)
  ubigeo      Ubigeo      @relation(fields: [ubigeo_id], references: [id], onDelete: Restrict)

  conyuge  Conyuge?
  children PersonalChildren[]

  @@map("personales")
}

model Conyuge {
  id                String           @id @default(cuid())
  nombres           String           @db.Citext
  apellidos         String           @db.Citext
  dni               String           @unique
  fecha_nacimiento  DateTime
  grado_instruccion GradoInstruccion

  ubigeo_id   Int
  personal_id String @unique

  personal Personal @relation(fields: [personal_id], references: [id], onDelete: Cascade)
  ubigeo   Ubigeo   @relation(fields: [ubigeo_id], references: [id], onDelete: Restrict)

  @@map("conyuges")
}

model Children {
  id                String           @id @default(cuid())
  nombres           String           @db.Citext
  apellidos         String           @db.Citext
  dni               String           @unique
  fecha_nacimiento  DateTime
  ubigeo_id         Int
  grado_instruccion GradoInstruccion

  ubigeo Ubigeo @relation(fields: [ubigeo_id], references: [id], onDelete: Restrict)

  parents PersonalChildren[]

  @@map("childrens")
}

model PersonalChildren {
  id          String @id @default(cuid())
  personal_id String
  children_id String

  personal Personal @relation(fields: [personal_id], references: [id], onDelete: Cascade)
  child    Children @relation(fields: [children_id], references: [id], onDelete: Cascade)

  @@unique([personal_id, children_id])
  @@map("personal_children")
}

model FormacionAcademica {
  id          String         @id @default(cuid())
  nivel       NivelEducativo
  institucion String         @db.Citext
  carrera     String?        @db.Citext
  periodo     Json // {from: DateTime, to: DateTime}
  tipo        String         @default("certificado")

  file_id String?
  user_id String

  user User  @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File? @relation(fields: [file_id], references: [id], onDelete: SetNull)

  @@map("estudios")
}
