// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [citext]
}

enum Role {
  admin
  personal
}

enum EstadoCivil {
  s
  c
  d
  v
}

enum GrupoSanguineo {
  a_positivo
  a_negativo
  b_positivo
  b_negativo
  ab_positivo
  ab_negativo
  o_positivo
  o_negativo
}

enum Sexo {
  m
  f
}

enum TipoContrato {
  dl
  cas
  pi
  p
}

enum TipoDesplazamiento {
  ri
  rv
  r
  d
  p
}

enum TipoDescanso {
  m
  p
  it
}

enum TipoPermisoLicenciaVacacion {
  per_mot
  per_enf
  per_hon
  per_cap
  per_lac
  lic_sgh
  lic_cgh
  lic_vac
  vac
}

enum SituacionLaboral {
  nd276
  cpv
  cl30057
  casi
  cast
  cpi
  ppp1404
  pp1004
}

enum RegimenPensionario {
  l29903
  dl19990
}

enum GradoInstruccion {
  sin
  pc
  pi
  sc
  si
  tec
  uni
  pos
  null
}

enum NivelEducativo {
  p
  s
  t
  u
  m
  d
  e
}

enum TContrato {
  dl_276
  cas
  dl_276_proyecto
  practicante
}

enum CLaboral {
  nombrado
  contratado
  plaza_vacante
  designado
  indeterminado
  eventual
  reincorporado
  mandato_judicial
  profesional
  preprofesional
}

enum RLaboral {
  dl_276
  fag_cas
  fun_276
  cas
  regimen_especial
}

enum TDiscapacidad {
  sen
  mot
  int
  psi
  mul
}

enum TEntCertDic {
  min
  ess
  cod
}

enum tipo_doc {
  mem
  ofi
  act
}

model Ubigeo {
  id           Int    @id @default(autoincrement())
  inei         String @unique
  reniec       String @unique
  departamento String @db.Citext
  provincia    String @db.Citext
  distrito     String @db.Citext

  personal Personal[]
  conyuge  Conyuge[]
  children Children[]

  @@map("ubigeos")
}

model Dependencia {
  id        Int     @id @default(autoincrement())
  nombre    String  @unique @db.Citext
  direccion String? @db.Citext
  codigo    String  @unique @db.Citext

  cargos CargoDependencia[]

  @@map("dependencias")
}

model Cargo {
  id     Int    @id @default(autoincrement())
  nombre String @unique @db.Citext

  dependencias CargoDependencia[]

  @@map("cargos")
}

model CargoDependencia {
  id            Int @id @default(autoincrement())
  cargoId       Int
  dependenciaId Int

  cargo       Cargo       @relation(fields: [cargoId], references: [id])
  dependencia Dependencia @relation(fields: [dependenciaId], references: [id])

  usuarios UsuarioCargoDependencia[]

  @@unique([cargoId, dependenciaId])
  @@map("cargos_dependencias")
}

model UsuarioCargoDependencia {
  id                 Int    @id @default(autoincrement())
  userId             String
  cargoDependenciaId Int

  experience             Experience[]
  renuncia               renuncia[]
  descanso_medico        descanso_medico[]
  per_lic_vac            per_lic_vac[]
  bonus_personal         bonus_personal[]
  current_ascenso        ascenso[]         @relation(name: "current_ucd")
  new_ascenso            ascenso[]         @relation(name: "new_ucd")
  current_desplazamiento desplazamiento[]  @relation(name: "current_ucd")
  new_desplazamiento     desplazamiento[]  @relation(name: "new_ucd")
  doc_u                  documento[]       @relation(name: "ucd")
  doc_r                  documento[]       @relation(name: "r_ucd")
  bonus_family           bonus_family[]
  merito                 merito[]

  user             User             @relation(fields: [userId], references: [id])
  cargoDependencia CargoDependencia @relation(fields: [cargoDependenciaId], references: [id])
  demerito         demerito[]
  evaluado_ucd     evaluation[]     @relation(name: "evaluado_ucd")
  evaluador_ucd    evaluation[]     @relation(name: "evaluador_ucd")
  Contrato         Contrato[]
  constancia       constancia[]

  @@unique([userId, cargoDependenciaId])
  @@map("usuario_cargo_dependencias")
}

model File {
  id             String @id @default(cuid())
  name           String
  path           String
  size           Int
  extension      String
  uploaded_by_id String
  folder         String

  uploaded_by        User                 @relation(name: "file_uploaded_by", fields: [uploaded_by_id], references: [id], onDelete: Cascade)
  accessible_by      FileAccess[]
  formacionAcademica FormacionAcademica[]
  capacitacion       Capacitacion[]
  experience         Experience[]
  contrato           Contrato[]
  Discapacidad       discapacidad[]
  renuncia           renuncia[]
  Desplazamiento     desplazamiento[]
  descanso_medico    descanso_medico[]
  per_lic_vac        per_lic_vac[]
  ascenso            ascenso[]
  bonus_personal     bonus_personal[]
  bonus_family       bonus_family[]
  evaluation         evaluation[]
  merito             merito[]
  documento          documento[]
  demerito           demerito[]
  constancia         constancia[]

  @@map("files")
}

model FileAccess {
  id      String @id @default(cuid())
  file    File   @relation(fields: [file_id], references: [id], onDelete: Cascade)
  file_id String
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String

  @@unique([file_id, user_id])
  @@map("file_access")
}

model rud_access {
  id         Int      @id @default(autoincrement())
  start_time DateTime
  end_time   DateTime

  @@unique([start_time, end_time])
  @@map("rud_access")
}

model conf_edicion {
  id           Int      @id @default(autoincrement())
  fecha_inicio DateTime
  fecha_fin    DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("conf_edicion")
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  status       String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id                    String   @id @default(cuid())
  name                  String   @db.Citext
  modification_end_time DateTime @default(now())
  last_name             String   @db.Citext
  email                 String   @unique @db.Citext
  password              String
  must_change_pwd       Int      @default(1)
  dni                   String   @unique
  role                  Role     @default(personal)

  uploaded_files          File[]                    @relation(name: "file_uploaded_by")
  accessible_files        FileAccess[]
  personal                Personal?
  formacion_academica     FormacionAcademica[]
  capacitacion            Capacitacion[]
  contrato                Contrato[]
  Discapacidad            discapacidad[]
  renuncia                renuncia[]
  Desplazamiento          desplazamiento[]
  descanso_medico         descanso_medico[]
  per_lic_vac             per_lic_vac[]
  ascenso                 ascenso[]
  bonus_personal          bonus_personal[]
  bonus_family            bonus_family[]
  merito                  merito[]
  documentos_e            documento[]               @relation(name: "user")
  documentos_r            documento[]               @relation(name: "received")
  demerito                demerito[]
  UsuarioCargoDependencia UsuarioCargoDependencia[]
  experience              Experience[]
  Session                 Session[]
  evaluado                evaluation[]              @relation(name: "evaluado")
  evaluador               evaluation[]              @relation(name: "evaluador")
  constancia              constancia[]

  @@map("users")
}

model Personal {
  id                String         @id @default(cuid())
  sexo              Sexo
  grupo_sanguineo   GrupoSanguineo
  n_autogenerado    String
  licencia_conducir String?        @db.Citext
  fecha_ingreso     DateTime
  anios_servicio    Int
  fecha_nacimiento  DateTime
  domicilio         String         @db.Citext
  numero_contacto   String
  estado_civil      EstadoCivil
  numero_hijos      Int            @default(0)
  discapacidad      Boolean        @default(false)

  ubigeo_id  Int
  user_id    String  @unique
  conyuge_id String?

  user   User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  ubigeo Ubigeo @relation(fields: [ubigeo_id], references: [id], onDelete: Restrict)

  conyuge  Conyuge?
  children PersonalChildren[]

  @@map("personales")
}

model Conyuge {
  id                String           @id @default(cuid())
  nombres           String           @db.Citext
  apellidos         String           @db.Citext
  dni               String           @unique
  fecha_nacimiento  DateTime
  grado_instruccion GradoInstruccion

  ubigeo_id   Int
  personal_id String @unique

  personal Personal @relation(fields: [personal_id], references: [id], onDelete: Cascade)
  ubigeo   Ubigeo   @relation(fields: [ubigeo_id], references: [id], onDelete: Restrict)

  @@map("conyuges")
}

model Children {
  id                String           @id @default(cuid())
  nombres           String           @db.Citext
  apellidos         String           @db.Citext
  dni               String           @unique
  fecha_nacimiento  DateTime
  ubigeo_id         Int
  grado_instruccion GradoInstruccion

  ubigeo Ubigeo @relation(fields: [ubigeo_id], references: [id], onDelete: Restrict)

  parents PersonalChildren[]

  @@map("childrens")
}

model discapacidad {
  id                    String        @id @default(cuid())
  tipo                  TDiscapacidad
  discapacidad          String        @db.Citext // Descripci√≥n de la discapacidad
  entidad_certificadora TEntCertDic
  fecha_certificacion   DateTime?

  user_id String
  file_id String

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("discapacidades")
}

model PersonalChildren {
  id          String @id @default(cuid())
  personal_id String
  children_id String

  personal Personal @relation(fields: [personal_id], references: [id], onDelete: Cascade)
  child    Children @relation(fields: [children_id], references: [id], onDelete: Cascade)

  @@unique([personal_id, children_id])
  @@map("personal_children")
}

model FormacionAcademica {
  id          String         @id @default(cuid())
  nivel       NivelEducativo
  institucion String         @db.Citext
  carrera     String?        @db.Citext
  periodo     Json // {from: DateTime, to: DateTime}
  tipo        String         @default("certificado")

  file_id String
  user_id String

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("estudios")
}

enum TipoCapacitacion {
  c
}

model Capacitacion {
  id                  String           @id @default(cuid())
  tipe                TipoCapacitacion @default(c)
  centro_capacitacion String           @db.Citext
  materia             String           @db.Citext
  especialidad        String           @db.Citext
  periodo             Json // {from: DateTime, to: DateTime}
  horas_lectivas      Int
  tipo                String           @default("certificado")

  file_id String
  user_id String

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("capacitaciones")
}

model Experience {
  id           String @id @default(cuid())
  centro_labor String @db.Citext
  periodo      Json // {from: DateTime, to: DateTime}

  usuarioCargoDependenciaId Int
  user_id                   String
  file_id                   String

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)
  user                    User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file                    File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([usuarioCargoDependenciaId, file_id])
  @@map("experiencias")
}

// a. R√©gimen de decreto legislativo 276
// Condici√≥n laboral (Nombrado, Contratado o en plaza vacante, Designado) *
// R√©gimen laboral (276, 276, FAG-CAS-FUN276) *
// Resoluci√≥n de nombramiento y/o contrato
// Dependencia y/o oficina -- cargo
// Nivel remunerativo
// PAP
// CNP
// periodo

// b. Contrato Administrativo de Servicio - CAS
// Condici√≥n laboral (Indeterminado, Eventual) * 
// R√©gimen laboral *
// Contrato-CAS
// Dependencia y/o oficina -- cargo
// periodo

// c. D.L. 276-Proyecto de inversi√≥n
// Condici√≥n laboral (Contratado, Reincorporado-Mandato Judicial) * 
// R√©gimen laboral *
// Resoluci√≥n de contrato
// Dependencia y/o oficina -- cargo
// Meta
// periodo

// d. Practicante-D.L. N¬∞ 1401-R√©gimen Especial Modalidades Formativas
// Condici√≥n laboral (Profesional - Preprofesional) *
// Convenio
// Dependencia y/o oficina  -- cargo 
// periodo

model Contrato {
  id                  String    @id @default(cuid())
  tipo_contrato       TContrato
  condicion_laboral   CLaboral
  regimen_laboral     RLaboral? // ** a, b, c
  resolucion_contrato String?   @db.Citext // Resoluci√≥n de nombramiento, contrato o convenio
  nivel_remuneracion  String?   @db.Citext // ** a
  pap                 Int? // ** a
  cnp                 Int? // ** a
  meta                String?   @db.Citext // ** c
  periodo             Json // {from: DateTime, to: DateTime}

  file_id String
  user_id String
  ucd_id  Int

  ucd  UsuarioCargoDependencia @relation(fields: [ucd_id], references: [id], onDelete: Cascade)
  file File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)
  user User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, file_id])
  @@map("contratos")
}

model renuncia {
  id     String   @id @default(cuid())
  motivo String   @db.Citext
  fecha  DateTime

  usuarioCargoDependenciaId Int
  file_id                   String
  user_id                   String

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)

  file File @relation(fields: [file_id], references: [id])
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, file_id])
  @@map("renuncias")
}

model desplazamiento {
  id                  String             @id @default(cuid())
  tipo_desplazamiento TipoDesplazamiento
  fecha               DateTime
  tipo_file           String

  file_id      String
  user_id      String
  currentUCDId Int
  newUCDId     Int

  currentUCD UsuarioCargoDependencia @relation(name: "current_ucd", fields: [currentUCDId], references: [id], onDelete: Cascade)
  newUCD     UsuarioCargoDependencia @relation(name: "new_ucd", fields: [newUCDId], references: [id], onDelete: Cascade)
  file       File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)
  user       User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([user_id, file_id])
  @@map("desplazamientos")
}

model descanso_medico {
  id            String       @id @default(cuid())
  detalle       String       @db.Citext
  tipo_descanso TipoDescanso
  periodo       Json // {from: DateTime, to: DateTime}

  user_id                   String
  file_id                   String
  usuarioCargoDependenciaId Int

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("descansos_medicos")
}

model per_lic_vac {
  id      String                      @id @default(cuid())
  detalle String                      @db.Citext
  tipo    TipoPermisoLicenciaVacacion
  periodo Json // {from: DateTime, to: DateTime}

  user_id                   String
  file_id                   String
  usuarioCargoDependenciaId Int

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("permisos_licencias_vacaciones")
}

model ascenso {
  id                 String   @id @default(cuid())
  resolucion_ascenso String   @db.Citext
  nivel_remunerativo String   @db.Citext
  fecha              DateTime
  cnp                Int

  user_id      String
  file_id      String
  currentUCDId Int
  newUCDId     Int

  currentUCD UsuarioCargoDependencia @relation(name: "current_ucd", fields: [currentUCDId], references: [id], onDelete: Cascade)
  newUCD     UsuarioCargoDependencia @relation(name: "new_ucd", fields: [newUCDId], references: [id], onDelete: Cascade)
  user       User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file       File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("ascensos")
}

model bonus_personal {
  id               String   @id @default(cuid())
  tipo             String   @db.Citext
  resolucion_bonus String   @db.Citext
  fecha            DateTime

  usuarioCargoDependenciaId Int
  user_id                   String
  file_id                   String

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("bonuses_personal")
}

model bonus_family {
  id               String   @id @default(cuid())
  tipo             String   @db.Citext
  resolucion_bonus String   @db.Citext
  fecha            DateTime

  user_id                   String
  file_id                   String
  usuarioCargoDependenciaId Int

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("bonuses_family")
}

model evaluation {
  id    String   @id @default(cuid())
  etapa Int // 1 | 2
  fecha DateTime

  file_id          String
  evaluado_id      String
  evaluado_ucd_id  Int
  evaluador_id     String
  evaluador_ucd_id Int

  evaluado_ucd  UsuarioCargoDependencia @relation(name: "evaluado_ucd", fields: [evaluado_ucd_id], references: [id], onDelete: Cascade)
  evaluador_ucd UsuarioCargoDependencia @relation(name: "evaluador_ucd", fields: [evaluador_ucd_id], references: [id], onDelete: Cascade)
  evaluado      User                    @relation(name: "evaluado", fields: [evaluado_id], references: [id], onDelete: Cascade)
  evaluador     User                    @relation(name: "evaluador", fields: [evaluador_id], references: [id], onDelete: Cascade)
  file          File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([evaluado_id, file_id])
  @@map("evaluations")
}

model merito {
  id     String   @id @default(cuid())
  fecha  DateTime
  motivo String   @db.Citext

  user_id                   String
  file_id                   String
  usuarioCargoDependenciaId Int

  usuarioCargoDependencia UsuarioCargoDependencia @relation(fields: [usuarioCargoDependenciaId], references: [id], onDelete: Cascade)

  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File @relation(fields: [file_id], references: [id])

  @@unique([user_id, file_id])
  @@map("meritos")
}

enum tipo_sancion {
  amo_ver
  amo_esc
  sus
  dest
}

model demerito {
  id             String       @id @default(cuid())
  tipo_sancion   tipo_sancion
  tipo_documento String       @db.Citext // Resoluciones, Memorando
  asunto         String       @db.Citext
  periodo        Json // {from: DateTime, to: DateTime}

  user_id String
  file_id String
  ucd_id  Int

  ucd  UsuarioCargoDependencia @relation(fields: [ucd_id], references: [id], onDelete: Cascade)
  user User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("demeritos")
}

model documento {
  id             String   @id @default(cuid())
  tipo_documento tipo_doc
  asunto         String   @db.Citext
  fecha_emision  DateTime @default(now())

  file_id  String
  user_id  String
  ucd_id   Int
  r_id     String
  r_ucd_id Int

  ucd      UsuarioCargoDependencia @relation(name: "ucd", fields: [ucd_id], references: [id], onDelete: Cascade)
  r_ucd    UsuarioCargoDependencia @relation(name: "r_ucd", fields: [r_ucd_id], references: [id], onDelete: Cascade)
  user     User                    @relation(name: "user", fields: [user_id], references: [id], onDelete: Cascade)
  received User                    @relation(name: "received", fields: [r_id], references: [id], onDelete: Cascade)
  file     File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("documentos")
}

model constancia {
  id               String @id @default(cuid())
  periodo          Json // {from: DateTime, to: DateTime}
  nivel_remunerado String @db.Citext
  pap              Int
  cnp              Int

  ucd_id  Int
  user_id String
  file_id String

  ucd  UsuarioCargoDependencia @relation(fields: [ucd_id], references: [id], onDelete: Cascade)
  user User                    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  file File                    @relation(fields: [file_id], references: [id], onDelete: Restrict)

  @@unique([user_id, file_id])
  @@map("constancias")
}
