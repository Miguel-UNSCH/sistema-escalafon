// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

/**
 * FICHA PERSONAL
 * ├── Datos Personales
 * ├── Estudios y Capacitación
 * ├── Discapacidad
 * └── Experiencia Laboral
 */

/**
 * -- Datos personales (+ trabajador)
 * *** a. Datos personales
 * Apellido Paterno
 * Apellido Materno
 * Nombres
 * Sexo
 * Edad
 * DNI (Carnet de extranjería)
 * N° de Autogenerado
 * Licencia de conducir
 * Grupo sanguíneo
 * Fecha de ingreso
 * Unidad estructurada donde trabaja
 * Cargo
 * Fecha de Nacimiento
 * Distrito
 * Provincia
 * Departamento/Región
 * Nacionalidad
 * Domicilio Av/Jr. Calle
 * Interior Urbanización
 * Provincia
 * Distrito
 * Teléfono fijo
 * Celular
 * Correo electrónico
 * Personal con discapacidad (si, no)
 * Régimen pensionario (L. N° 29903, D. L. ° 19990)
 * Nombre de AFP
 * Situación laboral (Nombrado-D-L. 276, Contratado plaza vacante, Contratado ley 30057, Contratado CAS-Indeterminado, Contratado en CAS-Temporal D.L. 1057, Contratado en proyecto de inversión, Practicantes preprofesionales-D.L. 1404, Practicante profesional-D.L. 1004).
 * Estado civil (Soltero/a, Casado/a, Separado/a, Viudo/a, Conviviente)
 */
model Ubigeo {
  id           Int    @id @default(autoincrement())
  departamento String
  provincia    String
  distrito     String

  Personal Personal[]
  Conyuge  Conyuge[]
  Hijo     Hijo[]
}

model Cargo {
  id       Int        @id @default(autoincrement())
  nombre   String
  Personal Personal[]
}

model Personal {
  id                 Int      @id @default(autoincrement())
  apellidoPaterno    String
  apellidoMaterno    String
  nombres            String
  sexo               String
  edad               Int
  dni                String   @unique
  nAutogenerado      String
  licnciaConducir    String?
  grupoSanguineo     String
  fechaIngreso       DateTime
  // unidadEstructurada ------ ???
  fechaNacimiento    DateTime
  nacionalidad       String
  telefono           String?
  celular            String
  email              String
  regimenPensionario String // L. N° 29903, D. L. ° 19990
  nombreAfp          String? // idk
  situacionLaboral   String // Nombrado-D-L. 276, Contratado plaza vacante, Contratado ley 30057, Contratado CAS-Indeterminado, Contratado en CAS-Temporal D.L. 1057, Contratado en proyecto de inversión, Practicantes preprofesionales-D.L. 1404, Practicante profesional-D.L. 1004
  estadoCivil        String

  ubigeoId     Int
  ubigeo       Ubigeo        @relation(fields: [ubigeoId], references: [id])
  cargoId      Int
  cargo        Cargo         @relation(fields: [cargoId], references: [id])
  discapacidad Discapacidad?

  conyuge        Conyuge?
  hijos          Hijo[]
  estudios       Estudios[]
  capacitaciones Capacitacion[]
  experiencias   ExperienciaLaboral[]
}

/**
 * *** b. Datos del Cónyuge
 * Apellidos y nombres
 * Lugar y fecha de nacimiento
 * Departamento/Región
 * Provincia
 * Distrito
 * Grado de instrucción
 * Profesión
 * Ocupación
 * Centro de Trabajo
 * Postgrado / Especialización (Título, Año, Universidad)
 */
model Conyuge {
  id               Int      @id @default(autoincrement())
  personalId       Int      @unique
  nombres          String
  ubigeoId         Int
  fechaNacimiento  DateTime
  gradoInstruccion String
  profesion        String?
  ocupacion        String?
  centroTrabajo    String? // idk
  postgrado        String? // if grado de instruccion

  personal Personal @relation(fields: [personalId], references: [id])
  ubigeo   Ubigeo   @relation(fields: [ubigeoId], references: [id])
}

/**
 * *** c. Datos de los hijos
 * Apellidos y nombres
 * Lugar y fecha de nacimiento
 * Edad
 * Grado de instrucción
 */
model Hijo {
  id               Int      @id @default(autoincrement())
  personalId       Int
  nombres          String
  fechaNacimiento  DateTime
  edad             Int
  ubigeoId         Int
  gradoInstruccion String

  personal Personal @relation(fields: [personalId], references: [id])
  ubigeo   Ubigeo   @relation(fields: [ubigeoId], references: [id])
}

/**
 * -- Personal con discapacidad (+ trabajador)
 * Apellidos y nombres
 * Sexo
 * DNI
 * Documento de sustento
 * Tipo de discapacidad
 * Cargo
 * Órgano estructurado
 * Condición laboral
 */
model Discapacidad {
  id                 Int    @id @default(autoincrement())
  personalId         Int    @unique
  tipo               String
  documentoSustento  String
  organoEstructurado String // idk
  condicionLaboral   String // how? Personal > situacionLaboral

  personal Personal @relation(fields: [personalId], references: [id])
}

/**
 * -- Estudios y capacitación (+ trabajador)
 * *** a. Estudios
 * Apellidos y nombres
 * Formación Académica(Primaria Completa, Primaria Incompleta, Incompleta, Universitario Secundaria Completa, Secundaria Completa, Universitario Incompleta, Bachiller, Titulado, Postgrado, Técnico Completo, Técnico Incompleta, Técnico Egresado, Técnico Titulado)
 * Año(Del, Al)
 * Nombre de la institución
 * Otros estudios con certificación
 * *** b. Capacitación
 * Apellidos y nombres
 * Centro de capacitación
 * Materia
 * Profesión o especialidad
 * Periodo (Del, Al)
 * Horas Lectivas
 * Fecha de emisión
 * Certificado escaneado en PDF
 */
model Estudios {
  id            Int     @id @default(autoincrement())
  personalId    Int
  nivel         String // formacion académica |Primaria Completa, Primaria Incompleta, Incompleta, Universitario Secundaria Completa, Secundaria Completa, Universitario Incompleta, Bachiller, Titulado, Postgrado, Técnico Completo, Técnico Incompleta, Técnico Egresado, Técnico Titulado
  periodo       String // "dd/mm/yyyy - dd/mm/yyyy" -- solo estudios culminados o en proceso tambien?
  institucion   String
  otrosEstudios String? // Estudios adicionales con certificación opcional ??

  personal Personal @relation(fields: [personalId], references: [id])
}

model Capacitacion {
  id                 Int      @id @default(autoincrement())
  personalId         Int
  centroCapacitacion String
  materia            String
  especialidad       String // profesión o especialidad
  periodo            String // "dd/mm/yyyy - dd/mm/yyyy" -- solo capacitaciones culminadas o en proceso tambien?
  horasLectivas      Int
  fechaEmision       DateTime
  certificadoPdf     String

  personal Personal @relation(fields: [personalId], references: [id])
}

/**
 * -- Experiencia laboral (+ trabajador)
 * Apellidos y nombres
 * Documento de sustento (Certificado, Constancia, Resolución, CAS, Locación de servicio)
 * Centro de labor
 * Dependencia y/o oficina
 * Cargo
 * Periodo de labor (Del - Al)
 * Fecha de emisión
 */
model ExperienciaLaboral {
  id                 Int      @id @default(autoincrement())
  personalId         Int
  documentoSustento  String // Certificado, Constancia, Resolución, CAS, Locación de servicio
  centroLabor        String
  dependenciaOficina String // crear una nnueva entidad
  cargo              String
  periodo            String // "dd/mm/yyyy - dd/mm/yyyy"
  fechaEmision       DateTime

  personal Personal @relation(fields: [personalId], references: [id])
}

// sector publico | sector privado | otro
/**
 * SITUACIÓN LABORAL
 * ├── Contratos y Nombramiento
 * ├── Renuncia y Liquidación
 * ├── Desplazamiento
 * ├── Descanso Médico
 * ├── Permisos / Licencias / Vacaciones
 * └── Ascensos
 */

/**
 * -- Contratos y nombramiento
 * ** a. Régimen de decreto legislativo 276
 * Apellidos y Nombres
 * Condición laboral (Nombrado, Contratado o en plaza vacante, Designado)
 * Dependencia y/o oficina
 * Resolución de nombramiento y/o contrato
 * Cargo estructural
 * Régimen laboral (276, 276, FAG-CAS-FUN276)
 * Nivel remuneración
 * PAP
 * CNP
 * Fecha de ingreso-GRA
 * Años de servicio
 * Fecha de nacimiento
 * Fecha de Cese
 * ** b. Contrato Administrativo de Servicio - CAS
 * Apellidos y nombres
 * Condición laboral (Indeterminado, Eventual)
 * Dependencia y/o oficina
 * Contrato-CAS
 * Cargo
 * Régimen laboral
 * Fecha de Ingreso-GRA (Desde - Hasta)
 * ** c. D.L. 276-Proyecto de inversión
 * Apellidos y nombres
 * Condición laboral (Contratado, Reincorporado-Mandato Judicial)
 * Dependencia y/o oficina
 * Resolución de contrato
 * Cargo
 * Meta
 * Régimen laboral
 * Fecha de Ingreso-GRA (Desde - Hasta)
 * ** d. Practicante-D.L. N° 1401-Régimen Especial Modalidades Formativas
 * Apellidos y nombres
 * Condición laboral (Profesional - Preprofesional)
 * Dependencia y/o oficina
 * Convenio
 * Fecha de Ingreso-GRA (Desde - Hasta)
 */

/**
 * -- Renuncia y liquidación
 * Apellidos y nombres
 * Documento de renuncia (Carta, resolución)
 * Motivo de renuncia (Particular, salud, personal)
 * Fecha de Renuncia
 * Dependencia y/o oficina
 * Cargo
 */

/**
 * -- Desplazamiento
 * Apellidos y nombres
 * Tipo (Rotación interna, Rotación voluntaria, Reasignación, Designación, Destaque, Permuta, Encargar)
 * Documento de rotación (Memorando, resolución)
 * Fecha de Desplazamiento
 * De la oficina
 * A la oficina
 * Cargo
 */

/**
 * -- Descanso médico
 * Apellidos y nombres
 * Tipo de descanso (Descanso médico según enfermedad, Particular, Pre y Postnatal)
 * Documento de sustento (Memorando, resolución, certificado de salud)
 * Fecha de descanso (Del - Al)
 * Dependencia y/o oficina
 * Cargo
 */

/**
 * -- Permisos licencias vacaciones
 * Apellidos y nombres
 * Tipo de permisos licencias vacaciones (Particular, Por cuenta de Vacaciones, Permiso por familiar)
 * Documento de sustento (Solicitud, resolución)
 * Fecha de permiso (Del - Al)
 * Dependencia y/o oficina
 * Cargo
 */

/**
 * -- Ascensos
 * Apellidos y nombres
 * Resolución de ascenso
 * Cargo (Del cargo, Al cargo)
 * Nivel Remunerativo (Del - Al)
 * PAP-CNP (Del - Al)
 * Dependencia y/o oficina
 */

/**
 * volver a ver los contratos ( Régimen de decreto legislativo 276 | Contrato Administrativo de Servicio - CAS | D.L. 276-Proyecto de inversión)
 */

// PAP (Puesto de Asignación Personal)
// CNP (Código Nacional del Personal)
// el ascenso cambia de oficina?
// ascenso como tal no hay en el GORE, lo que hay es cargo de confianza

/**
 * BONIFICACIONES Y EVALUACIONES
 * ├── Bonificación Personal
 * ├── Bonificación Familiar
 * └── Ficha de Evaluación
 */

/**
 * -- Bonificación personal (+ trabajador)
 * Apellidos y nombres
 * Tipo de bonificación personal
 * Resolución de bonificación personal
 * Dependencia y/o oficina
 * Cargo
 */

/**
 * -- Bonificación familiar (+ trabajador)
 * Apellidos y nombres
 * Tipo de Bonificación familiar
 * Resolución de bonificación familiar
 * Dependencia y/o oficina
 * Cargo
 */

/**
 * -- Ficha de evaluación (+ trabajador)
 * Apellidos y nombres
 * Documento de sustento
 * Dependencia y/o oficina
 * Cargo
 * Fecha de evaluación
 */

// documentoBonificacion, ahi se encuentra todos los detalles?

/**
 * MÉRITOS Y DEMÉRITOS
 * ├── Méritos
 * └── Deméritos
 */

/**
 * -- Méritos (+ trabajador)
 * Apellidos y nombres
 * Documento de sustento (Resoluciones, Cartas)
 * Dependencia y/o oficina
 * Cargo
 * Fecha
 */

/**
 * -- Deméritos -- administrador
 * Apellidos y nombres
 * Documento de sustento (Resoluciones, Memorando)
 * Tipo de sanción (suspensión de labor sin goce de haberes, Amonestación, Papeleta de abandono)
 * Fecha de Sanción (Del - Al)
 * Dependencia y/o oficina
 * Cargo
 */

/**
 * DOCUMENTOS / OTROS
 * ├── Acta de Entrega
 * └── Constancia de Pagos
 */

/**
 * -- Acta de entrega (+ trabajador)
 * Apellidos y nombres
 * Quien recibe la acta de entrega
 * Documento de sustento (acta)
 * Dependencia y/o oficina
 * Cargo
 * Fecha (Del - Al)
 */

/**
 * -- Constancia de pagos de haberes y descuentos (+ trabajador)
 * Apellidos y nombres
 * Documento de sustento (Constancia de pago, Boleta de pago)
 * Dependencia y/o oficina
 * Cargo
 * Nivel Remunerativo (SPC, P-4)
 * PAP
 * CNP
 * Dias Laborados (Del - Al)
 */
