// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Trabajador {
  id                      Int                  @id @default(autoincrement())
  apellidoPaterno          String
  apellidoMaterno          String
  nombres                  String
  sexo                     String
  edad                     Int
  dni                      String
  nroAutogenerado          String
  licenciaConducir         String
  grupoSanguineo           String  
  fechaIngreso             DateTime
  unidadEstructurada       String // cosejo regional - gonbernacion - gerencia general - subsegrencias - direccion [jerarquia]
  cargo                    String
  fechaNacimiento          DateTime
  distrito                 String // ubigeo: distritto, provincia, departamento
  provincia                String
  departamentoRegion       String
  nacionalidad             String
  domicilio                String
  interiorUrbanizacion     String
  telefonoFijo             String
  celular                  String
  correoElectronico        String
  personalDiscapacidad     Boolean
  regimenPensionario       String
  nombreAFP                String
  situacionLaboral         String
  estadoCivil              String

  // Relaciones
  conyuge                  Conyuge?
  hijos                    Hijo[]
  estudios                 Estudio[]
  capacitaciones           Capacitacion[]
  experienciasLaborales    ExperienciaLaboral[]
  discapacidades           Discapacidad[]
  contratos                Contrato[]
  renuncias                Renuncia[]
  desplazamientos          Desplazamiento[]
  descansosMedicos         DescansoMedico[]
  permisosLicenciasVacaciones PermisoLicenciaVacaciones[]
  ascensos                 Ascenso[]
  bonificacionesPersonales BonificacionPersonal[]
  bonificacionesFamiliares BonificacionFamiliar[]
  fichasEvaluacion         FichaEvaluacion[]
  meritos                  Merito[]
  dem√©ritos                Demerito[]
  actasEntrega             ActaEntrega[]
  constanciasPago          ConstanciaPago[]
}

model Conyuge {
  id                     Int      @id @default(autoincrement())
  trabajadorId           Int      @unique
  apellidosYNombres      String
  lugarFechaNacimiento   String
  gradoInstruccion       String
  profesion              String
  ocupacion              String
  centroTrabajo          String
  postgradoEspecializacion String

  trabajador             Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Hijo {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  apellidosYNombres       String
  lugarFechaNacimiento    String
  edad                    Int

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
  gradosInstruccion      GradoInstruccion[]
}

model GradoInstruccion {
  id                     Int      @id @default(autoincrement())
  hijoId                 Int
  gradoInstruccion       String

  hijo                   Hijo     @relation(fields: [hijoId], references: [id])
}

model Estudio {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  formacionAcademica      String
  anoInicio               Int
  anoFin                  Int
  institucion             String
  otrosEstudios           String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Capacitacion {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  centroCapacitacion      String
  materia                 String
  profesionEspecialidad   String
  periodoInicio           DateTime
  periodoFin              DateTime
  horasLectivas           Int
  fechaEmision            DateTime
  certificadoPdf          String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model ExperienciaLaboral {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoSustento       String
  centroLaboral           String
  dependenciaOficina      String
  cargo                   String
  periodoInicio           DateTime
  periodoFin              DateTime
  fechaEmision            DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Discapacidad {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  tipoDiscapacidad        String
  documentoSustento       String
  cargo                   String
  organoEstructurado      String
  condicionLaboral        String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Oficina {
  id                      Int      @id @default(autoincrement())
  nombre                  String
  
  contratos               Contrato[]
}

model Contrato {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  oficinaId              Int
  cargoEstructural        String
  regimenLaboral          String
  nivelRemuneracion       String
  papCnp                  String
  fechaIngreso            DateTime
  fechaCese               DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
  oficina                 Oficina   @relation(fields: [oficinaId], references: [id])
}




model Renuncia {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoRenuncia       String
  motivoRenuncia          String
  fechaRenuncia           DateTime
  dependenciaOficina      String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Desplazamiento {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  tipoDesplazamiento      String
  documentoRotacion       String
  fechaDesplazamiento     DateTime
  oficinaOrigen           String
  oficinaDestino          String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model DescansoMedico {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  tipoDescanso            String
  documentoSustento       String
  fechaInicio             DateTime
  fechaFin                DateTime
  dependenciaOficina      String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model PermisoLicenciaVacaciones {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  tipoPermiso             String
  documentoSustento       String
  fechaInicio             DateTime
  fechaFin                DateTime
  dependenciaOficina      String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Ascenso {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoAscenso        String
  cargoAnterior           String
  cargoActual             String
  nivelRemunerativo       String
  papCnp                  String
  fechaAscenso            DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model BonificacionPersonal {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  tipoBonificacion        String
  documentoBonificacion   String
  dependenciaOficina      String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model BonificacionFamiliar {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  tipoBonificacion        String
  documentoBonificacion   String
  dependenciaOficina      String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model FichaEvaluacion {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoSustento       String
  dependenciaOficina      String
  cargo                   String
  fechaEvaluacion         DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Merito {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoSustento       String
  dependenciaOficina      String
  cargo                   String
  fechaMerito             DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model Demerito {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoSustento       String
  tipoSancion             String
  fechaInicio             DateTime
  fechaFin                DateTime
  dependenciaOficina      String
  cargo                   String

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model ActaEntrega {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  personaRecibeActa      String
  documentoActa           String
  dependenciaOficina      String
  cargo                   String
  fechaInicio             DateTime
  fechaFin                DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}

model ConstanciaPago {
  id                      Int      @id @default(autoincrement())
  trabajadorId            Int
  documentoPago           String
  dependenciaOficina      String
  cargo                   String
  nivelRemunerativo       String
  papCnp                  String
  diasLaboradosInicio     DateTime
  diasLaboradosFin        DateTime

  trabajador              Trabajador @relation(fields: [trabajadorId], references: [id])
}
