"use client";
import { SubmitHandler, useForm } from "react-hook-form";
import React, { useState, useEffect } from "react";
import { LuSave, LuUserRoundPlus } from "react-icons/lu";

/** ---------------------------------------------------------------------------------------------------------------------------------------------- */

type FormValues = {
  fatherLastName: string;
  motherLastName: string;
  firstName: string;
  birthPlace: string;
  birthDate: string;
  age: number;
  dni: string;
  sex: string;
  autoGeneratedNumber: string;
  driverLicense: string;
  bloodGroup: string;
  entryDate: string;
  workUnit: string;
  position: string;
  district: string;
  province: string;
  department: string;
  nationality: string;
};
const Form = () => {
  const {
    register,
    handleSubmit,
    setValue,
    formState: { errors },
  } = useForm<FormValues>();

  const [age, setAge] = useState<number | null>(null);

  const calculateAge = (birthDate: string) => {
    const birthDateObj = new Date(birthDate);
    const today = new Date();

    if (birthDateObj > today) {
      setAge(0);
      return;
    }

    let age = today.getFullYear() - birthDateObj.getFullYear();
    const month = today.getMonth() - birthDateObj.getMonth();

    if (month < 0 || (month === 0 && today.getDate() < birthDateObj.getDate())) age -= 1;

    setAge(age < 0 ? 0 : age);
  };

  useEffect(() => {
    if (age !== null) setValue("age", age);
  }, [age, setValue]);

  const onSubmit: SubmitHandler<FormValues> = (data) => console.log(data);

  const today = new Date().toISOString().split("T")[0];

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="font-inter">
      {/* Apellido Paterno */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="fatherLastName" className="block mb-2 font-medium text-text-primary">
          Apellido Paterno
        </label>
        <input
          id="fatherLastName"
          {...register("fatherLastName", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.fatherLastName && <p>{errors.fatherLastName.message}</p>}
      </div>

      {/* Apellido Materno */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="motherLastName" className="block mb-2 font-medium text-text-primary">
          Apellido Materno
        </label>
        <input
          id="motherLastName"
          {...register("motherLastName", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.motherLastName && <p>{errors.motherLastName.message}</p>}
      </div>

      {/* Nombres */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="firstName" className="block mb-2 font-medium text-text-primary">
          Nombres
        </label>
        <input
          id="firstName"
          {...register("firstName", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.firstName && <p>{errors.firstName.message}</p>}
      </div>

      {/* Sexo */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="sex" className="block mb-2 font-medium text-text-primary">
          Sexo
        </label>
        <select
          id="sex"
          {...register("sex", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        >
          <option value="">Seleccione el sexo</option>
          <option value="Masculino">Masculino</option>
          <option value="Femenino">Femenino</option>
          <option value="Otro">Otro</option>
        </select>
        {errors.sex && <p>{errors.sex.message}</p>}
      </div>

      {/* DNI */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="dni" className="block mb-2 font-medium text-text-primary">
          DNI / Carnet de extranjería
        </label>
        <input
          id="dni"
          {...register("dni", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.dni && <p>{errors.dni.message}</p>}
      </div>

      {/* N° de Autogenerado */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="autoGeneratedNumber" className="block mb-2 font-medium text-text-primary">
          N° de Autogenerado
        </label>
        <input
          id="autoGeneratedNumber"
          {...register("autoGeneratedNumber", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.autoGeneratedNumber && <p>{errors.autoGeneratedNumber.message}</p>}
      </div>

      {/* Licencia de conducir */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="driverLicense" className="block mb-2 font-medium text-text-primary">
          Licencia de conducir
        </label>
        <input
          id="driverLicense"
          {...register("driverLicense", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.driverLicense && <p>{errors.driverLicense.message}</p>}
      </div>

      {/* Grupo sanguíneo */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="bloodGroup" className="block mb-2 font-medium text-text-primary">
          Grupo sanguíneo
        </label>
        <input
          id="bloodGroup"
          {...register("bloodGroup", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.bloodGroup && <p>{errors.bloodGroup.message}</p>}
      </div>

      {/* Fecha de ingreso */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="entryDate" className="block mb-2 font-medium text-text-primary">
          Fecha de ingreso
        </label>
        <input
          id="entryDate"
          type="date"
          {...register("entryDate", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.entryDate && <p>{errors.entryDate.message}</p>}
      </div>

      {/* Unidad estructurada donde trabaja */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="workUnit" className="block mb-2 font-medium text-text-primary">
          Unidad estructurada donde trabaja
        </label>
        <input
          id="workUnit"
          {...register("workUnit", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.workUnit && <p>{errors.workUnit.message}</p>}
      </div>

      {/* Cargo */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="position" className="block mb-2 font-medium text-text-primary">
          Cargo
        </label>
        <input
          id="position"
          {...register("position", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.position && <p>{errors.position.message}</p>}
      </div>

      {/* Fecha de nacimiento */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="birthDate" className="block mb-2 font-medium text-text-primary">
          Fecha de nacimiento
        </label>
        <input
          id="birthDate"
          type="date"
          {...register("birthDate", { required: "Este campo es obligatorio" })}
          onChange={(e) => calculateAge(e.target.value)}
          max={today}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.birthDate && <p>{errors.birthDate.message}</p>}
      </div>

      {/* Edad */}
      <div className="flex flex-col font-poppins">
        <label htmlFor="age" className="block mb-2 font-medium text-text-primary">
          Edad
        </label>
        <input
          id="age"
          type="number"
          value={age || 0}
          {...register("age", { required: "Este campo es obligatorio" })}
          className="bg-transparent mb-5 p-2.5 focus:outline-none border border-border-primary rounded-lg w-full text-sm"
        />
        {errors.age && <p>{errors.age.message}</p>}
      </div>

      {/* Más campos... */}

      <div className="flex flex-row justify-end items-center gap-2">
        <div className="flex flex-row items-center gap-2 bg-[#7287fd] p-2 rounded-lg">
          <LuUserRoundPlus className="ml-2" />
          <button type="button" className="pr-2">
            Agregar
          </button>
        </div>
        <div className="flex flex-row items-center gap-2 bg-[#179299] p-2 rounded-lg">
          <LuSave className="ml-2" />
          <button type="submit" className="pr-2">
            Guardar
          </button>
        </div>
      </div>
    </form>
  );
};

/** ---------------------------------------------------------------------------------------------------------------------------------------------- */

const page = () => {
  return (
    <div className="flex flex-col justify-center items-center font-poppins">
      <div className="flex flex-col">
        <h3 className="font-bold font-montserrat text-xl uppercase">Datos personales</h3>
        <Form />
      </div>
    </div>
  );
};

export default page;
